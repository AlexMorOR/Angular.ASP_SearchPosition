{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LogService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.backendURL;\n    this.logUrl = this.baseUrl + \"/log\";\n    this.logs = [];\n  }\n  updateLog() {\n    this.http.get(this.logUrl).subscribe({\n      next: res => {\n        this.logs = res;\n      },\n      error: e => {\n        console.log(e);\n      }\n    });\n  }\n}\nLogService.ɵfac = function LogService_Factory(t) {\n  return new (t || LogService)(i0.ɵɵinject(i1.HttpClient));\n};\nLogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogService,\n  factory: LogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,UAAU;EAOrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,YAAO,GAAUH,WAAW,CAACI,UAAU;IACvC,WAAM,GAAG,IAAI,CAACC,OAAO,GAAG,MAAM;IAE9B,SAAI,GAAgB,EAAE;EAEkB;EAExCC,SAAS;IACP,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CAClC;MACEC,IAAI,EAAGC,GAAG,IAAG;QACX,IAAI,CAACC,IAAI,GAAGD,GAAiB;MAC/B,CAAC;MACDE,KAAK,EAAGC,CAAC,IAAG;QAAGC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAAE;KAChC,CACF;EACH;;AAlBWb,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAgB,SAAVhB,UAAU;EAAAiB,YAFT;AAAM","names":["environment","LogService","constructor","http","backendURL","baseUrl","updateLog","get","logUrl","subscribe","next","res","logs","error","e","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\AlexMor\\Documents\\GitProjects\\Angular.ASP_SearchPosition\\Angular.ASP_SearchPosition.SPA\\src\\app\\shared\\log.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LogModel } from './log-model.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  baseUrl:string = environment.backendURL;\n  logUrl = this.baseUrl + \"/log\";\n  \n  logs : LogModel[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  updateLog(){\n    this.http.get(this.logUrl).subscribe(\n      {\n        next : res =>{\n          this.logs = res as LogModel[];\n        },\n        error : e => { console.log(e); }\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}